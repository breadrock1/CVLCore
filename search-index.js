var searchIndex = JSON.parse('{\
"cvlcore":{"doc":"","t":"RRAFFFAAFFFFFFFAAADNENNLLLLLLLLLLLLLLLLLLLDDLLLLLLLMMMLLMLLLLLLLMMLMLLLLLLLLLLLLMAAAARRDRRRLLLLLLLLLLLLLDLLLLLLLLMLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLEGGNNNNNNNNNNNNNEGEGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLANNDELLLLLLLLLLLLLLLLLLL","n":["ANY_2_DIM_IMAGE","BGR_CV_IMAGE","api","calculate_mat_median","compute_statistic","compute_vibration","core","errors","gen_abs_frame","gen_abs_frame_reduce","gen_canny_frame","gen_canny_frame_by_sigma","gen_distribution_frame","gen_grayscale_frame","gen_threshold_frame","ui","capture","chain","CvlCapture","RtspStream","StreamSource","VideoFile","WebCamera","borrow","borrow","borrow_mut","borrow_mut","close_stream","default","from","from","into","into","new","open_stream","read_frame","try_from","try_from","try_into","try_into","type_id","type_id","ChainProcessing","ProcessingSettings","abs_recursively","append_frame","borrow","borrow","borrow_mut","borrow_mut","canny","canny_is_l2","canny_ksize","canny_sigma","default","default","frames_count","from","from","get_dispersion","get_result","grayscale","into","into","is_reduced_abs","neighbours","new","normalization","reduce_abs","run_chain","set_frames","settings","statistic","try_from","try_from","try_into","try_into","type_id","type_id","vibrating","window_size","bounds","deque","mat","statistic","BLACK_COLOR","CYAN_COLOR","ColorBounds","GREEN_COLOR","RED_COLOR","YELLOW_COLOR","borrow","borrow_mut","clone","clone_into","default","from","get","into","new","to_owned","try_from","try_into","type_id","CvlMatDeque","borrow","borrow_mut","clone","clone_into","default","from","from","get","inner","into","length","max_size","new","push","set_max_size","take_first","take_last","to_owned","try_from","try_into","type_id","CvlMat","borrow","borrow_mut","bytes_data","channels","clone","clone_into","columns","default","deref","dims","frame","frame_mut","from","from","into","new","new_with_data","rows","set_statistic","statistic","to_f64_vec","to_owned","to_scalar_vec","to_slice","try_from","try_into","typ","type_id","Dispersion","Statistic","borrow","borrow","borrow_mut","borrow_mut","ch1","ch1","ch2","ch2","ch3","ch3","ch4","ch4","clone","clone","clone_into","clone_into","default","default","fmt","fmt","from","from","from","into","into","new","new","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CaptureError","CaptureResult","ChainResult","CloseStream","ComputeMedian","ComputeStatistic","ComputeVibration","GenAbs","GenCanny","GenDifferences","GenDistribution","GenGrayScale","GenSobel","GenThreshold","NextFrameError","OpenStream","ProcessingError","ProcessingResult","ReadFrameError","ReadFrameResult","UnsupportedSource","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","window","CLoseApplication","KeepProcessing","MainWindow","WindowSignals","borrow","borrow","borrow_mut","borrow_mut","close_window","create_window","from","from","into","into","new","show_frame","try_from","try_from","try_into","try_into","type_id","type_id","wait_event"],"q":[[0,"cvlcore"],[16,"cvlcore::api"],[18,"cvlcore::api::capture"],[42,"cvlcore::api::chain"],[81,"cvlcore::core"],[85,"cvlcore::core::bounds"],[104,"cvlcore::core::deque"],[126,"cvlcore::core::mat"],[155,"cvlcore::core::statistic"],[192,"cvlcore::errors"],[243,"cvlcore::ui"],[244,"cvlcore::ui::window"]],"d":["","","","This method returns arithmetic mean (average) of all …","","This method returns image with vibrating pixels (colored …","","","This recursive method returns result-image of …","This method returns reduced result-image of …","This method returns canny image from passed grayscale …","This method returns canny image from passed grayscale …","This method returns distribution image from passed …","Transformations within RGB space like adding/removing the …","This method returns threshold image from passed bgr-image …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A black color pixel value used for marking magnitude and …","A cyan color pixel value used for marking magnitude and …","","A green color pixel value used for marking magnitude and …","A red color pixel value used for marking magnitude and …","A yellow color pixel value used for marking magnitude and …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,17,17,17,14,17,14,14,14,17,14,17,14,14,14,14,17,14,17,14,17,14,0,0,21,21,22,21,22,21,21,22,22,22,22,21,22,22,21,21,21,21,22,21,22,22,21,22,21,21,21,21,21,22,21,22,21,22,21,21,22,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,0,34,33,33,33,33,33,33,33,33,33,33,35,34,0,0,0,0,34,33,34,35,33,34,35,33,33,34,34,35,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,0,38,38,0,0,38,37,38,37,37,37,38,37,38,37,37,37,38,37,38,37,38,37,37],"f":[0,0,0,[1,[[3,[2]]]],[[[5,[4]],6],7],[[1,8,8,9],10],0,0,[[[12,[[11,[1]]]]],10],[[[12,[[11,[1]]]]],10],[[1,2,2,8,13],10],[[1,8,2,13],10],[[1,2,2],10],[1,10],[[1,2,2],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[14,15],[[],14],[[]],[[]],[[]],[[]],[[],14],[[14,16,17],15],[14,18],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],0,0,[21,21],[21,21],[[]],[[]],[[]],[[]],[21,21],0,0,0,[[],22],[[],21],0,[[]],[[]],[21,[[3,[7]]]],[21,23],[21,21],[[]],[[]],0,0,[22,21],0,[21,21],[[21,1],21],[[21,[5,[[11,[1]]]]]],[21,22],[21,21],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[21,21],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[9,9],[[]],[[],9],[[]],[[9,8],8],[[]],[[8,8,8,8],9],[[]],[[],19],[[],19],[[],20],0,[[]],[[]],[[[25,[24]]],[[25,[24]]]],[[]],[[],25],[[]],[5,25],[[25,26],3],0,[[]],[25,26],[25,26],[26,25],[25],[[25,26]],[25,3],[25,3],[[]],[[],19],[[],19],[[],20],0,[[]],[[]],[1,27],[1,8],[1,1],[[]],[1,8],[[],1],[1],[1,8],[1,28],[1,28],[[]],[28,1],[[]],[28,1],[[8,8,8,[12,[27]]],1],[1,8],[[1,4]],[1,[[3,[4]]]],[1,[[29,[[5,[2]]]]]],[[]],[1,[[5,[2]]]],[1,[[29,[[12,[27]]]]]],[[],19],[[],19],[1,8],[[],20],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[4,4],[7,7],[[]],[[]],[[],4],[[],7],[[4,30],31],[[7,30],31],[[]],[[]],[[[5,[6]]],7],[[]],[[]],[[32,32,32,32],4],[[6,6,6,6],7],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[33,30],31],[[33,30],31],[[34,30],31],[[34,30],31],[[35,30],31],[[35,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[37],[37],[[]],[[]],[[]],[[]],[16,37],[[37,1]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[37,38]],"c":[],"p":[[3,"CvlMat"],[15,"f64"],[4,"Option"],[3,"Statistic"],[3,"Vec"],[15,"f32"],[3,"Dispersion"],[15,"i32"],[3,"ColorBounds"],[6,"ProcessingResult"],[3,"Rc"],[15,"slice"],[15,"bool"],[3,"CvlCapture"],[6,"CaptureResult"],[15,"str"],[4,"StreamSource"],[6,"ReadFrameResult"],[4,"Result"],[3,"TypeId"],[3,"ChainProcessing"],[3,"ProcessingSettings"],[6,"ChainResult"],[8,"Clone"],[3,"CvlMatDeque"],[15,"usize"],[15,"u8"],[3,"Mat"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"u16"],[4,"ProcessingError"],[4,"CaptureError"],[4,"ReadFrameError"],[3,"String"],[3,"MainWindow"],[4,"WindowSignals"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
